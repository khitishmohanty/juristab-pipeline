# config/heading_hierarchy_rules.yaml

# Rules for determining heading hierarchy based on text content patterns
# Specifically designed for Australian legislation, acts, bills, and regulations
# These rules are processed in order, with higher priority rules taking precedence

heading_hierarchy_rules:
  # Top-level structural divisions - highest level (H1)
  top_level_structures:
    level: "h1"
    priority: 100
    patterns:
      - regex: "^Chapter\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Chapter 1", "Chapter 2A", "CHAPTER 10"]
      - regex: "^Part\\s+\\d+[A-Z]*\\s*$"
        case_insensitive: true
        examples: ["Part 1", "Part 2A", "Part 10B", "PART 5"]
      - regex: "^Part\\s+\\d+[A-Z]*\\s+[A-Z]"
        case_insensitive: true
        examples: ["Part 1 Preliminary", "Part 2A Introduction"]
      - regex: "^Book\\s+\\d+"
        case_insensitive: true
        examples: ["Book 1", "Book 2"]
      - regex: "^Title\\s+\\d+"
        case_insensitive: true
        examples: ["Title 1", "Title 2"]
      - regex: "^Schedule\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Schedule 1", "Schedule 2A", "SCHEDULE 5"]
      - regex: "^Appendix\\s+[A-Z0-9]+"
        case_insensitive: true
        examples: ["Appendix A", "Appendix 1", "APPENDIX B"]

  # Major sections - second level (H2)
  major_sections:
    level: "h2"
    priority: 90
    patterns:
      - regex: "^Division\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Division 1", "Division 2A", "DIVISION 5"]
      - regex: "^Section\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Section 1", "Section 25A", "Section 100"]
      - regex: "^Subdivision\\s+[A-Z0-9]+"
        case_insensitive: true
        examples: ["Subdivision A", "Subdivision 1", "SUBDIVISION B"]
      - regex: "^Clause\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Clause 1", "Clause 15A", "CLAUSE 20"]
      - regex: "^Article\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Article 1", "Article 5A"]
      - regex: "^Regulation\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Regulation 1", "Regulation 25A"]
      - regex: "^Rule\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Rule 1", "Rule 10A"]

  # Special Australian legislative terms - contextual level (H2)
  special_provisions:
    level: "h2"
    priority: 85
    patterns:
      - regex: "^Objects?\\s+(of\\s+)?(this\\s+)?(Act|Bill|Regulation|Rules?)"
        case_insensitive: true
        examples: ["Objects of this Act", "Object of the Bill", "Objects of this Regulation"]
      - regex: "^Purpose\\s+(of\\s+)?(this\\s+)?(Act|Bill|Regulation|Rules?)"
        case_insensitive: true
        examples: ["Purpose of this Act", "Purpose of the Bill"]
      - regex: "^Definitions?\\s*$"
        case_insensitive: true
        examples: ["Definitions", "Definition"]
      - regex: "^Interpretation\\s*$"
        case_insensitive: true
        examples: ["Interpretation"]
      - regex: "^Commencement\\s*$"
        case_insensitive: true
        examples: ["Commencement"]
      - regex: "^Application\\s+(of\\s+)?(this\\s+)?(Act|Bill|Regulation|Rules?)"
        case_insensitive: true
        examples: ["Application of this Act", "Application"]
      - regex: "^Transitional\\s+provisions?"
        case_insensitive: true
        examples: ["Transitional provisions", "Transitional provision"]
      - regex: "^Savings?\\s+provisions?"
        case_insensitive: true
        examples: ["Savings provisions", "Saving provision"]
      - regex: "^Repeals?\\s+(and\\s+amendments?)?"
        case_insensitive: true
        examples: ["Repeals", "Repeal and amendments"]
      - regex: "^Consequential\\s+amendments?"
        case_insensitive: true
        examples: ["Consequential amendments"]
      - regex: "^Preliminary\\s*$"
        case_insensitive: true
        examples: ["Preliminary"]

  # Sub-sections - third level (H3)
  sub_sections:
    level: "h3"
    priority: 80
    patterns:
      - regex: "^Subsection\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Subsection 1", "Subsection 2A"]
      - regex: "^Subclause\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Subclause 1", "Subclause 5A"]
      - regex: "^Subrule\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Subrule 1", "Subrule 3A"]
      - regex: "^Subregulation\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Subregulation 1", "Subregulation 2A"]
      - regex: "^Item\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Item 1", "Item 25A", "ITEM 100"]

  # Numbered sections (common in Australian legislation) - third level (H3)
  # These are simple numbered headings like "1 Name of Act", "2 Commencement"
  numbered_sections:
    level: "h3"
    priority: 75
    patterns:
      # Match single or double digit numbers followed by space and any text
      - regex: "^\\d{1,3}[A-Z]?\\s+\\w"
        case_insensitive: false
        examples: ["1 Name of Act", "2 Commencement", "2A Proceedings", "74 Review of Act", "100 Definitions"]
      # Match patterns without extra space requirements
      - regex: "^\\d{1,3}\\s+[A-Z]"
        case_insensitive: false
        examples: ["1 Name", "2 Commencement", "25 Application"]

  # Detailed provisions - fourth level (H4)
  detailed_provisions:
    level: "h4"
    priority: 70
    patterns:
      - regex: "^Paragraph\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Paragraph 1", "Paragraph 5A"]
      - regex: "^Subparagraph\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Subparagraph 1", "Subparagraph 2A"]
      - regex: "^Subitem\\s+\\d+[A-Z]*"
        case_insensitive: true
        examples: ["Subitem 1", "Subitem 3A"]

# Enumeration patterns that should NOT be treated as headings
# when proper headings (from above rules) are present
enumeration_exclusions:
  patterns:
    - regex: "^\\(\\w+\\)"  # (a), (b), (1), (2), etc.
      examples: ["(a)", "(b)", "(1)", "(2)", "(i)", "(ii)"]
    - regex: "^\\([a-z]\\)\\s"     # (a) with space
      examples: ["(a) ", "(b) ", "(c) "]
    - regex: "^\\(\\d+\\)\\s"     # (1) with space
      examples: ["(1) ", "(2) ", "(3) "]
    - regex: "^[a-z]\\.$"     # a., b., c. (only letter and period)
      examples: ["a.", "b.", "i.", "ii."]
    - regex: "^\\d+\\.\\d+" # 1.1, 1.2, 2.1, etc.
      examples: ["1.1", "1.2", "2.1"]

# Configuration settings
settings:
  # If true, enumeration patterns will be ignored as headings when structural headings are present
  ignore_enumerations_when_structural_headings_exist: true
  
  # Minimum text length for a heading (to avoid single letters being treated as headings)
  min_heading_text_length: 2
  
  # Maximum text length for a heading (very long text is likely paragraph content)
  max_heading_text_length: 250